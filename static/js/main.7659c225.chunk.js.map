{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","Axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","marginLeft","marginTop","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","uuidv1","post","history","push","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updateContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7659c225.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport React, { Component } from \"react\";\n// import Contact from './components/Contact';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n  // componentDidMount() {\n  //   Axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n  //     this.setState({\n  //       contacts: response.data,\n  //     })\n  //   );\n  // }\n\n  async componentDidMount() {\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({\n      contacts: res.data,\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import './contact.css'\nimport { Consumer } from \"../../context\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n  // this.onShowClick = this.onShowClick.bind(this);\n\n  // onShowClick = e => {\n  //   this.setState({\n  //     showContactInfo: !this.state.showContactInfo\n  //   })\n  // }\n  // onDeleteClick = (id, dispatch) => {\n  //   Axios.delete(\n  //     `https://jsonplaceholder.typicode.com/users/${id}`\n  //   ).then((response) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  // };\n\n  onDeleteClick = async (id, dispatch) => {\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo,\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{\n                    cursor: \"pointer\",\n                    marginLeft: \"5px\",\n                    marginTop: \"0\",\n                  }}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                      float: \"right\",\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  // deleteClickHandler: PropTypes.func.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  // deleteContact = (id) => {\n  //   const { contacts } = this.state;\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\n  //   this.setState({\n  //     contacts: newContacts\n  //   })\n  //   console.log(newContacts)\n  // }\n\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map((contact) => (\n                // <h1>{contact.name}</h1>\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    // {/* <h1 style={{color:'red', fontSize:'40px'}}>{branding}</h1> */}\n    // {/* <h1 style={headingStyle}>{branding}</h1> */}\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"av-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"av-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"av-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nHeader.defaultProps = {\n  branding: \"My App\",\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n// const headingStyle = {\n//   color: 'blue',\n//   fontSize: '40px'\n// }\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  error: PropTypes.string,\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport Axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      id: uuidv1(),\n      name,\n      email,\n      phone,\n    };\n\n    const res = await Axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    type=\"number\"\n                    placeholder=\"enter phone number\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nfunction About(props) {\n  return (\n    <div>\n      {/* <h1>{props.match.params.id}</h1> */}\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage Contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\nexport default About;\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4 text-danger\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry That Page Doesn't Exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          title: data.title,\n          body: data.id,\n        })\n      );\n  }\n  //deprecated\n  // componentWillMount() {\n  //   console.log(\"component will mount\");\n  // }\n\n  // componentDidUpdate() {\n  //   console.log(\"component updated\");\n  // }\n  //deprecated\n  // componentWillUpdate() {\n  //   console.log(\"component will update\");\n  // }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        {/* <h1>Life Cycle Methods</h1> */}\n        <h1>{body}</h1>\n        <h1>{title}</h1>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport Axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const updateContact = {\n      name,\n      email,\n      phone,\n    };\n    const { id } = this.props.match.params;\n\n    const res = await Axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    type=\"text\"\n                    placeholder=\"enter phone number\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              {/* <Route exact path=\"/about/:id\" component={About} /> */}\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}